{"version":3,"sources":["pages/Home.js","pages/Proposal.js","images/Moralis.svg","App.js","index.js"],"names":["Home","useState","passRate","setPassRate","totalP","setTotalP","counted","setCounted","useMoralis","Moralis","isInitialized","proposals","setProposals","voters","setVoters","Web3API","useMoralisWeb3Api","sub","setSub","contractProcessor","useWeb3ExecuteFunction","createProposal","newProposal","a","options","contractAddress","functionName","abi","inputs","internalType","name","type","outputs","stateMutability","params","_description","_canVote","fetch","onSuccess","console","log","alert","onError","error","getStatus","proposalId","ProposalCounts","Object","extend","query","Query","equalTo","first","undefined","result","attributes","approved","color","text","useEffect","getProposals","Proposals","descending","find","results","Promise","all","map","description","proposer","id","to","state","table","length","getPassRate","votesUp","forEach","element","ownersOfToken","address","token_id","chain","token","getTokenIdOwners","tokenIdOwners","addresses","owner_of","className","defaultActiveKey","tabStyle","tabKey","tabName","info","title","style","width","columnsConfig","data","header","margin","pageSize","buttonConfig","isLoading","loadingText","theme","inputWidth","validation","required","value","onSubmit","e","inputResult","class","href","target","rel","Proposal","proposalDetails","useLocation","latestVote","setLatestVote","percUp","setPercUp","percDown","setPercDown","votes","setVotes","getVotes","Votes","Number","votesDown","toFixed","votesDirection","voter","fill","votedFor","size","svg","castVote","upDown","_id","_vote","message","content","seed","rowKey","isDisabled","height","border","App","src","moralisLogo","alt","path","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.c23260b8.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Form, Tab, Table, TabList, Tag, Widget } from \"web3uikit\";\nimport { Link } from \"react-router-dom\";\nimport { useMoralis, useMoralisWeb3Api, useWeb3ExecuteFunction } from \"react-moralis\";\nimport \"./pages.css\";\n\n\nconst Home = () => {\n\n    const [passRate, setPassRate] = useState(0);\n    const [totalP, setTotalP] = useState(0);\n    const [counted, setCounted] = useState(0);\n    const {Moralis, isInitialized } = useMoralis();\n    const [proposals, setProposals] = useState();\n    const [voters, setVoters] = useState();\n    const Web3API = useMoralisWeb3Api();\n    const [sub, setSub] = useState();\n    const contractProcessor = useWeb3ExecuteFunction();\n\n\n    const createProposal = async (newProposal) => {\n      let options = {\n        contractAddress: \"0xc2f04A841Bf61d92FE312ac0D45FDa02e6577486\",\n        functionName: \"createProposal\",\n        abi: [\n          {\n            inputs: [\n              {\n                internalType: \"string\",\n                name: \"_description\",\n                type: \"string\",\n              },\n              {\n                internalType: \"address[]\",\n                name: \"_canVote\",\n                type: \"address[]\",\n              },\n            ],\n            name: \"createProposal\",\n            outputs: [],\n            stateMutability: \"nonpayable\",\n            type: \"function\",\n          },\n        ],\n        params: {\n          _description: newProposal,\n          _canVote: voters,\n        },\n      };\n  \n  \n      await contractProcessor.fetch({\n        params: options,\n        onSuccess: () => {\n          console.log(\"Proposal Succesful\");\n          setSub(false);\n          alert(\"Transaction completed successfully.\");\n        },\n        onError: (error) => {\n          alert(error);\n          setSub(false);\n        },\n      });\n  \n    }\n\n\n    const getStatus = async (proposalId) => {\n      const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n      const query = new Moralis.Query(ProposalCounts);\n      query.equalTo(\"proposalId\", proposalId);\n      const result = await query.first();\n      if (result !== undefined) {\n        if (result.attributes.approved) {\n          return { color: \"green\", text: \"Passed\" };\n        } else {\n          return { color: \"red\", text: \"Rejected\" };\n        }\n      } else {\n        return { color: \"blue\", text: \"Ongoing\" };\n      }\n    };\n\n    useEffect(() => {\n      if (isInitialized) {\n        const getProposals = async () => {\n          const Proposals = Moralis.Object.extend(\"Proposals\");\n          const query = new Moralis.Query(Proposals);\n          query.descending(\"proposalId_decimal\");\n          const results = await query.find();\n          const table = await Promise.all(\n            results.map(async (result) => [\n              result.attributes.proposalId,\n              result.attributes.description,\n              <Link to='/proposal/'\n                state={{\n                  description : result.attributes.description,\n                  color : (await getStatus(result.attributes.proposalId)).color,\n                  text : (await getStatus(result.attributes.proposalId)).text,\n                  id : result.attributes.proposalId,\n                  proposer : result.attributes.proposer,\n                }}\n              >\n                <Tag\n                  color={(await getStatus(result.attributes.proposalId)).color}\n                  text={(await getStatus(result.attributes.proposalId)).text}\n\n                />\n              </Link>\n            ]));\n          setProposals(table);\n          setTotalP(results.length);\n        }\n\n        const getPassRate = async () => {\n          const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n          const query = new Moralis.Query(ProposalCounts);\n          const results = await query.find();\n          let votesUp = 0;\n\n          results.forEach((element) => {\n            if(element.attributes.approved) votesUp++;\n          });\n          setCounted(results.length);\n          setPassRate((votesUp / results.length) * 100);\n        }\n\n        const ownersOfToken = async () => {\n          const options = {\n            address : \"0x2953399124F0cBB46d2CbACD8A89cF0599974963\",\n            token_id : \"67841412279532801837515543174226035610057961491298794127114430528654986444801\",\n            chain : \"mumbai\"\n          }\n          const tokenIdOwners = await Web3API.token.getTokenIdOwners(options);\n          const addresses = tokenIdOwners.result.map((element) => element.owner_of);\n          setVoters(addresses);\n        }\n\n          ownersOfToken();\n          getProposals();\n          getPassRate();\n      }\n      else {\n        console.log(\"not initialized\");\n      }\n    }, [isInitialized]);\n \n  return (\n    <>\n      <div className=\"content\">\n        <TabList defaultActiveKey={1} tabStyle=\"bulbUnion\">\n          <Tab tabKey={1} tabName=\"Proposals\">\n            {proposals && (\n              <div className=\"tabContent\">\n              Overview\n              <div className=\"widgets\">\n                <div className=\"first\">\n                <Widget\n                  info={totalP}\n                  title=\"Proposals Created\"\n                >\n                  <div className=\"extraWidgetInfo\">\n                    <div className=\"extraTitle\">Pass Rate</div>\n                    <div className=\"progress\">\n                      <div\n                        className=\"progressPercentage\"\n                        style={{ width: `${passRate}%`}}\n                      ></div>\n                    </div>\n                    <div className=\"extraValue\">{passRate}%</div>\n\n                  </div>\n                </Widget>\n                </div>\n                <Widget info={voters.length} title=\"Eligible Voters\" />\n                <Widget info={totalP-counted} title=\"Ongoing Proposals\" />\n              </div>\n              Recent Proposals\n              <div className=\"newProposal\">\n                <Table\n                  columnsConfig=\"10% 70% 10%\"\n                  data={proposals}\n                  header={[\n                    <span style={{margin : \"10px 20px\"}}>ID</span>,\n                    <span style={{margin : \"10px 20px\"}}>Description</span>,\n                    <span style={{margin : \"10px 20px\"}}>Status</span>,\n                  ]}\n                  pageSize={5}\n                />\n              <Form\n                  buttonConfig={{\n                    isLoading: sub,\n                    loadingText: \"Submitting...\",\n                    text: \"Submit\",\n                    theme: \"secondary\",\n                  }}\n                  data={[\n                    {\n                      inputWidth: \"100%\",\n                      name: \"New Proposal\",\n                      type: \"textarea\",\n                      validation: {\n                        required: true,\n                      },\n                      value: \"\",\n                    },\n                  ]}\n                  onSubmit={(e) => {\n                    setSub(true);\n                    createProposal(e.data[0].inputResult);\n                  }}\n                  title=\"Create a New Proposal\"\n                />\n              </div>\n              </div>\n\n            )}\n          </Tab>\n          <Tab tabKey={2} tabName=\"About\">\n            <div class=\"about\">\n              NFT proof collection for joining is linked <a href=\"https://testnets.opensea.io/collection/proposal-nft\" target=\"_blank\" rel=\"noreferrer\" >here.</a>\n              <br />\n              <br />\n              Made by <a href=\"https://github.com/priyansh71\" target=\"_blank\" rel=\"noreferrer\">Priyansh</a> using&nbsp;\n              <a href=\"https://moralis.io\">Moralis.io</a>\n            </div>\n            </Tab>\n        </TabList>\n      </div>\n      <div className=\"voting\"></div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Blockie, Form, Icon, Table, Tag, Tooltip, Widget } from \"web3uikit\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./pages.css\";\n\n\nconst Proposal = () => {\n\n  const { state : proposalDetails } = useLocation();\n  const { Moralis, isInitialized } = useMoralis();\n  const [latestVote, setLatestVote] = useState();\n  const [percUp, setPercUp] = useState(0);\n  const [percDown, setPercDown] = useState(0);\n  const [votes, setVotes] = useState([]);\n  const [sub, setSub] = useState();\n  const contractProcessor = useWeb3ExecuteFunction();\n\n  useEffect(() => {\n    if (isInitialized) {\n      const getVotes = async () => {\n        const Votes = Moralis.Object.extend(\"Votes\");\n        const query = new Moralis.Query(Votes);\n        query.equalTo(\"proposal\", proposalDetails.id);\n        query.descending(\"createdAt\");\n        const results = await query.find();\n        if (results.length > 0) {\n          setLatestVote(results[0].attributes);\n          setPercDown(\n            (\n              (Number(results[0].attributes.votesDown) /\n                (Number(results[0].attributes.votesDown) +\n                  Number(results[0].attributes.votesUp))) *\n              100\n            ).toFixed(0)\n          );\n          setPercUp(\n            (\n              (Number(results[0].attributes.votesUp) /\n                (Number(results[0].attributes.votesDown) +\n                  Number(results[0].attributes.votesUp))) *\n              100\n            ).toFixed(0)\n          );\n        \n        }\n\n        const votesDirection = results.map((e) => [\n          e.attributes.voter,\n          <Icon\n            fill={e.attributes.votedFor ? \"#2cc40a\" : \"#d93d3d\"}\n            size={20}\n            svg={e.attributes.votedFor ? \"checkmark\" : \"arrowCircleDown\"}\n          />,\n        ]);\n          setVotes(votesDirection);\n        } \n        getVotes();\n      }}\n\n\n      , [isInitialized]\n    );\n\n\n      const castVote = async (upDown) => {\n    \n        let options = {\n          contractAddress: \"0xc2f04A841Bf61d92FE312ac0D45FDa02e6577486\",\n          functionName: \"voteOnProposal\",\n          abi: [\n            {\n              inputs: [\n                {\n                  internalType: \"uint256\",\n                  name: \"_id\",\n                  type: \"uint256\",\n                },\n                {\n                  internalType: \"bool\",\n                  name: \"_vote\",\n                  type: \"bool\",\n                },\n              ],\n              name: \"voteOnProposal\",\n              outputs: [],\n              stateMutability: \"nonpayable\",\n              type: \"function\",\n            },\n          ],\n          params: {\n            _id: proposalDetails.id,\n            _vote: upDown,\n          },\n        };\n\n        await contractProcessor.fetch({\n          params: options,\n          onSuccess: () => {\n            console.log(\"Vote Cast Succesfully\");\n            setSub(false);\n            alert(\"Transaction completed successfully.\");\n          },\n          onError: (error) => {\n            alert(error.data.message);\n            setSub(false);\n          },\n        });\n    \n      }\n\n  return (\n    <>\n      <div className=\"contentProposal\">\n        <div className=\"proposal\">\n          <Link to=\"/\">\n            <div className=\"backHome\">\n              <Icon fill=\"#ffffff\" size={20} svg=\"chevronLeft\" />\n              Overview\n            </div>\n          </Link>\n          <div className=\"describe\">{proposalDetails.description}</div>\n          <div className=\"proposalOverview\">\n            <Tag color={proposalDetails.color} text={proposalDetails.text} />\n            <div className=\"proposer\">\n              <span>Proposed By </span>\n              <Tooltip content={proposalDetails.proposer}>\n                <Blockie seed={proposalDetails.proposer} />\n              </Tooltip>\n            </div>\n          </div>\n        </div>\n        { latestVote && (\n        <div className=\"widgets\">\n          <Widget info={latestVote.votesUp} title=\"Votes For\">\n            <div className=\"extraWidgetInfo\">\n              <div className=\"extraTitle\">{percUp}%</div>\n              <div className=\"progress\">\n                <div\n                  className=\"progressPercentage\"\n                  style={{ width: `${percUp}%` }}\n                ></div>\n              </div>\n            </div>\n          </Widget>\n          <Widget info={latestVote.votesDown} title=\"Votes Against\">\n            <div className=\"extraWidgetInfo\">\n              <div className=\"extraTitle\">{percDown}%</div>\n              <div className=\"progress\">\n                <div\n                  className=\"progressPercentage\"\n                  style={{ width: `${percDown}%` }}\n                ></div>\n              </div>\n            </div>\n          </Widget>\n        </div>\n        )}\n        <div className=\"votesDiv\">\n          <Table\n            style={{ width: \"400px\" }}\n            columnsConfig=\"80% 20%\"\n            data={votes}\n            rowKey=\"id\"\n            header={[\n            <span style={{margin : \"10px 20px\"}}>Address</span>,\n            <span style={{margin : \"10px 20px\"}}>Vote</span>]}\n            pageSize={5}\n            />\n\n          <Form\n            isDisabled={proposalDetails.text !== 'Ongoing'}\n            style={{\n              width: \"40px\",\n              height: \"250px\",\n              border: \"1px solid rgba(6, 158, 252, 0.2)\",\n            }}\n            buttonConfig={{\n              isLoading: sub,\n              loadingText: \"Casting Vote\",\n              text: \"Vote\",\n              theme: \"secondary\",\n            }}\n            data={[\n              {\n                inputWidth: \"100%\",\n                name: \"Cast Your Vote\",\n                options: [\"For\", \"Against\"],\n                type: \"radios\",\n                validation: {\n                  required: true,\n                },\n              },\n            ]}\n            onSubmit={(e) => {\n              if(e.data[0].inputResult[0] === 'For') castVote(true);\n              else castVote(false);\n              setSub(true);\n            }}\n            title=\"Cast Your Vote\"\n          />\n        </div>\n     </div>\n     <div className=\"voting2\"></div>\n    </>\n  );\n};\n\nexport default Proposal;\n","export default __webpack_public_path__ + \"static/media/Moralis.29d45c5c.svg\";","import React from \"react\";\nimport \"./App.css\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Proposal from \"./pages/Proposal\";\nimport moralisLogo from \"./images/Moralis.svg\";\nimport { ConnectButton } from \"web3uikit\";\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"header\">\n        <Link to=\"/\">\n        <img width=\"100px\" src={moralisLogo} alt=\"logo\" />\n        </Link>\n        <ConnectButton />\n      </div>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/proposal\" element={<Proposal />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MoralisProvider } from \"react-moralis\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <MoralisProvider appId=\"ECh7rJk4seHGkjLxzAbSGVdnMl7uAMrF3VsmsFF7\" serverUrl=\"https://vbo917ukbq06.usemoralis.com:2053/server\">\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </MoralisProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}